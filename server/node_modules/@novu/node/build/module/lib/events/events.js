import { WithHttp } from '../novu.interface';
export class Events extends WithHttp {
    async trigger(workflowIdentifier, data) {
        return await this.http.post(`/events/trigger`, {
            name: workflowIdentifier,
            to: data.to,
            payload: {
                ...data?.payload,
            },
            transactionId: data.transactionId,
            overrides: data.overrides || {},
            ...(data.actor && { actor: data.actor }),
            ...(data.tenant && { tenant: data.tenant }),
        });
    }
    async bulkTrigger(events) {
        return await this.http.post(`/events/trigger/bulk`, {
            events,
        });
    }
    async broadcast(workflowIdentifier, data) {
        return await this.http.post(`/events/trigger/broadcast`, {
            name: workflowIdentifier,
            payload: {
                ...data?.payload,
            },
            overrides: data.overrides || {},
            ...(data.tenant && { tenant: data.tenant }),
        });
    }
    async cancel(transactionId) {
        return await this.http.delete(`/events/trigger/${transactionId}`);
    }
}
